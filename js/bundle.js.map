{"version":3,"file":"bundle.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC5GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE,gCAAgC;AAChC,gCAAgC;AAChC;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,+BAA+B,UAAU,MAAM,SAAS;AACxD,sDAAsD,WAAW;AACjE,oDAAoD,WAAW;AAC/D;AACA;AACA;AACA,8DAA8D,WAAW;AACzE;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,IAAI,YAAY,WAAW;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,iCAAiC;AAC/D;AACA,gBAAgB;AAChB,YAAY,GAAG;AACf;AACA;AACA;AACA,gCAAgC,iCAAiC;AACjE;AACA,iBAAiB;AACjB,SAAS;AACT;AACA;AACA;AACA;AACA;;;;;;;;;;ACvEA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK,GAAG;AACR;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA,iEAAiE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE;AACnE;AACA,oDAAoD;AACpD,kDAAkD;AAClD;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,gBAAgB;AAChB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC5GA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,wCAAwC;AACxC;AACA,iDAAiD;AACjD,qCAAqC;AACrC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,cAAc,GAAG;AAClD,mCAAmC,WAAW;AAC9C,OAAO;AACP,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,mBAAmB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,UAAU;AACV;AACA;AACA;AACA;AACA,qDAAqD,OAAO;AAC5D;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,sCAAsC,WAAW;AACjD,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,qDAAqD,OAAO;AAC5D;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,sCAAsC,WAAW;AACjD,UAAU;AACV;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,OAAO;AAChE;AACA;AACA,0CAA0C,WAAW;AACrD,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,+BAA+B;AAC/B;AACA;AACA,mCAAmC,cAAc,GAAG;AACpD,SAAS;AACT,8CAA8C;AAC9C;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,0CAA0C;AAC1C;AACA;AACA,gEAAgE;AAChE;AACA,2DAA2D;AAC3D;AACA;AACA,yCAAyC,WAAW,GAAG;AACvD,aAAa;AACb,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;;;;;;;;;AClMA;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C,SAAS;AACT;AACA;AACA,6DAA6D;AAC7D,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD,yDAAyD;AACzD;AACA;AACA,sBAAsB;AACtB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC,uCAAuC;AACvC;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;;;;;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,IAAI;AAC3B,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;UCpEA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;ACtBA;AACA,iBAAiB,mBAAO,CAAC,4CAAgB;AACzC,iBAAiB,mBAAO,CAAC,8CAAiB;AAC1C,iBAAiB,mBAAO,CAAC,8CAAiB;AAC1C,kBAAkB,mBAAO,CAAC,8CAAiB;AAC3C,iBAAiB,mBAAO,CAAC,4CAAgB;AACzC,kBAAkB,mBAAO,CAAC,8CAAiB;AAC3C,mBAAmB,mBAAO,CAAC,gDAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,c","sources":["webpack://fooddist/./js/modules/calc.js","webpack://fooddist/./js/modules/cards.js","webpack://fooddist/./js/modules/forms.js","webpack://fooddist/./js/modules/modal.js","webpack://fooddist/./js/modules/slider.js","webpack://fooddist/./js/modules/tabs.js","webpack://fooddist/./js/modules/timer.js","webpack://fooddist/webpack/bootstrap","webpack://fooddist/./js/script.js"],"sourcesContent":["function calc() {\r\n    const result = document.querySelector('.calculating__result span');\r\n    let sex, height, weight, age, ratio;\r\n\r\n    if (localStorage.getItem('sex')) {\r\n        sex = localStorage.getItem('sex');\r\n    } else {\r\n        sex = 'female';\r\n        localStorage.setItem('sex', 'female');\r\n    }\r\n\r\n    if (localStorage.getItem('ratio')) {\r\n        ratio = localStorage.getItem('ratio');\r\n    } else {\r\n        ratio = '1.375';\r\n        localStorage.setItem('ratio', '1.375');\r\n    }\r\n\r\n    function initLocalSettings(selector, activeClass) {\r\n        const elements = document.querySelectorAll(selector);\r\n\r\n        elements.forEach(elem => {\r\n            elem.classList.remove(activeClass);\r\n            if (elem.getAttribute('id') === localStorage.getItem('sex')) {\r\n                elem.classList.add(activeClass);\r\n            }\r\n            if (elem.getAttribute('data-ratio') === localStorage.getItem('ratio'))\r\n                elem.classList.add(activeClass);\r\n        });\r\n    }\r\n\r\n    initLocalSettings('#gender div', 'calculating__choose-item_active');\r\n    initLocalSettings('.calculating__choose_big div', 'calculating__choose-item_active');\r\n    \r\n    function calcTotal() {\r\n        if (!sex || !height || !weight || !age || !ratio) {\r\n            result.textContent = '____';\r\n            return;\r\n        }\r\n\r\n        if (sex === 'female') {\r\n            result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);\r\n        } else {\r\n            result.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\r\n        }\r\n    }\r\n\r\n    calcTotal();\r\n\r\n    function getStaticInfomation(selector, activeClass) {\r\n        const elements = document.querySelectorAll(selector);\r\n\r\n        elements.forEach(elem => {\r\n            elem.addEventListener('click', (e) => {\r\n                if (e.target.getAttribute('data-ratio')) {\r\n                    ratio = +e.target.getAttribute('data-ratio');\r\n                    localStorage.setItem('ratio', +e.target.getAttribute('data-ratio'));\r\n                } else {\r\n                    sex = e.target.getAttribute('id');\r\n                    localStorage.setItem('sex', e.target.getAttribute('id'));\r\n                }\r\n\r\n                console.log(ratio, sex);\r\n\r\n                elements.forEach(elem => {\r\n                    elem.classList.remove(activeClass);\r\n                });\r\n\r\n                e.target.classList.add(activeClass);\r\n\r\n                calcTotal();\r\n            });\r\n        });\r\n    }\r\n\r\n    getStaticInfomation('#gender div', 'calculating__choose-item_active');\r\n    getStaticInfomation('.calculating__choose_big div', 'calculating__choose-item_active');\r\n    \r\n\r\n    function getDynamicInformation(selector) {\r\n        const input = document.querySelector(selector);\r\n    \r\n        input.addEventListener('input', () => {\r\n            if (input.value.match(/\\D/g)) {\r\n                input.style.border = \"1px solid red\";\r\n            } else {\r\n                input.style.border = \"none\";\r\n                switch (input.getAttribute('id')) {\r\n                    case 'height':\r\n                        height = +input.value;\r\n                        break;\r\n                    case 'weight':\r\n                        weight = +input.value;\r\n                        break;\r\n                    case 'age':\r\n                        age = +input.value;\r\n                        break;\r\n                }\r\n                calcTotal(); // Обновляем результат\r\n            }\r\n        });\r\n    }\r\n    \r\n    getDynamicInformation('#height');\r\n    getDynamicInformation('#weight');\r\n    getDynamicInformation('#age');\r\n}\r\n\r\nmodule.exports = calc;","function cards() {\r\n    class MenuCard {\r\n        constructor(src, alt, title, descr, price, parentSelector, ...classes) {\r\n            this.src = src;\r\n            this.alt = alt;\r\n            this.title = title;\r\n            this.descr = descr;\r\n            this.price = price;\r\n            this.classes = classes;\r\n            this.parent = document.querySelector(parentSelector); // Получение родительского элемента\r\n            this.transfer = 27; // Курс пересчета цены\r\n            this.changeToUAH(); // Пересчет цены в гривны\r\n        }\r\n\r\n        changeToUAH() {\r\n            this.price = this.price * this.transfer; // Цена пересчитывается и заменяет старое значение\r\n        }\r\n\r\n        render() {\r\n            const element = document.createElement('div'); // Создание нового элемента\r\n\r\n            if (this.classes.length === 0) {\r\n                this.element = 'menu__item';\r\n                element.classList.add(this.element);\r\n            } else {\r\n                this.classes.forEach(className => element.classList.add(className));\r\n            }\r\n\r\n            element.innerHTML = `\r\n                <div class=\"menu__item\">\r\n                    <img src=${this.src} alt=${this.alt}>\r\n                    <h3 class=\"menu__item-subtitle\">${this.title}</h3>\r\n                    <div class=\"menu__item-descr\">${this.descr}</div>\r\n                    <div class=\"menu__item-divider\"></div>\r\n                    <div class=\"menu__item-price\">\r\n                        <div class=\"menu__item-cost\">Цена:</div>\r\n                        <div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div>\r\n                    </div>\r\n                </div>\r\n            `;\r\n            this.parent.append(element); // Вставка в DOM\r\n        }\r\n    }\r\n\r\n    const getResource = async (URL) => {\r\n        const res = await fetch(URL);\r\n\r\n        if (!res.ok) {\r\n            throw new Error(`Coul not fetch ${URL}, status: ${res.status}`);\r\n        }\r\n\r\n        return await res.json();\r\n    };\r\n\r\n    // getResource('http://localhost:3000/menu') //отправляет HTTP-запрос\r\n    //     .then(data => {\r\n    //         data.forEach(({img, altimg, title, descr, price}) => {\r\n    //             new MenuCard(img, altimg, title, descr, price, '.menu .container').render();\r\n    //         });\r\n    //     }); //из каждого объекта извлекаются свойства b Создается новый объект (экземпляр) класса MenuCard.\r\n    \r\n    axios.get('http://localhost:3000/menu')\r\n        .then(data => {\r\n            data.data.forEach(({img, altimg, title, descr, price}) => {\r\n                 new MenuCard(img, altimg, title, descr, price, '.menu .container').render();\r\n                });\r\n        });\r\n        \r\n    \r\n}\r\n\r\nmodule.exports = cards;","function forms() {\r\n    const forms = document.querySelectorAll('form'); //Получает список всех элементов <form> на странице.\r\n\r\n    const message = {\r\n        loading: 'img/form/spinner.svg',\r\n        success: 'Спасибо! Скоро мы с вами свяжемся',\r\n        failure: 'Что-то пошло не так...'\r\n    }; //Объект, содержащий сообщения\r\n\r\n    forms.forEach(item => {\r\n        bindPostData(item);\r\n    }); //Цикл forEach проходит по каждой найденной форме на странице и передает ее в функцию postData.\r\n\r\n    const postData = async (URL, data) => {\r\n        const res = await fetch(URL, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n           body: data\r\n        });\r\n\r\n        return await res.json();\r\n    };\r\n\r\n    function bindPostData(form) {\r\n        form.addEventListener('submit', (e) => {\r\n            e.preventDefault(); //Отменяет стандартное поведение браузера, чтобы форма не перезагружала страницу.\r\n            //Устанавливается обработчик события submit для каждой формы. \r\n            // Когда пользователь отправляет форму, вызывается функция.\r\n\r\n            const statusMessage = document.createElement('img'); //Создается элемент <div> для отображения текущего статуса.\r\n            statusMessage.src = message.loading;\r\n            statusMessage.style.cssText = `\r\n                display: block;\r\n                margin: 0 auto;\r\n            `;\r\n             \r\n            form.insertAdjacentElement('afterend', statusMessage); //Добавляется элемент со статусом внутрь формы.\r\n\r\n            //const request = new XMLHttpRequest(); //Создается объект для отправки HTTP-запроса.\r\n            //request.open('POST', 'server.php'); //Настраивается запрос на отправку данных методом\r\n \r\n            const formData = new FormData(form); //Создает объект FormData, содержащий данные формы.\r\n\r\n            // const object = {};\r\n            // formData.forEach(function(value, key){\r\n            //     object[key] = value;\r\n            // });\r\n\r\n            const json = JSON.stringify(Object.fromEntries(formData.entries()));\r\n\r\n            \r\n            postData('http://localhost:3000/requests', json)\r\n            .then(data => {\r\n                console.log(data);\r\n                showThanksModal(message.success);\r\n                statusMessage.remove();\r\n            }).catch(() => {\r\n                showThanksModal(message.failure);\r\n            }).finally(() => {\r\n                form.reset();\r\n            });\r\n\r\n\r\n            // request.addEventListener('load', () => { //обработчик, который срабатывает при завершении запроса.\r\n            //     if (request.status === 200) {\r\n            //         console.log(request.response);\r\n            //         showThanksModal(message.success);\r\n            //         form.reset();\r\n            //         statusMessage.remove();\r\n            //     } else {\r\n            //         showThanksModal(message.failure);\r\n            //     }\r\n            // });\r\n        });\r\n    }\r\n\r\n    function showThanksModal(message) {\r\n        const prevModalDialog = document.querySelector('.modal__dialog');\r\n\r\n        prevModalDialog.classList.add('hide');\r\n        openModal();\r\n\r\n        const thanksModal = document.createElement('div');\r\n        thanksModal.classList.add('modal__dialog');\r\n        thanksModal.innerHTML = `\r\n            <div class=\"modal__content\">\r\n                <div class=\"modal__close\" data-close>x</div>\r\n                <div class=\"modal__title\">${message}</div>\r\n            </div>\r\n        `;\r\n\r\n        document.querySelector('.modal').append(thanksModal);\r\n        setTimeout(() => {\r\n            thanksModal.remove();\r\n            prevModalDialog.classList.add('show');\r\n            prevModalDialog.classList.remove('hide');\r\n            closeModal();\r\n        }, 4000);\r\n    }\r\n\r\n    fetch('http://localhost:3000/menu')\r\n         .then(data => data.json())\r\n         .then(res => console.log(res));\r\n\r\n}\r\n\r\nmodule.exports = forms;","function modal() {\r\n    const modalTrigger = document.querySelectorAll('[data-modal]'),\r\n        modal = document.querySelector('.modal');\r\n\r\n    function openModal() {\r\n        modal.classList.add('show'); // Добавляет класс 'show' к элементу с модальным окном\r\n        modal.classList.remove('hide'); // Убирает класс 'hide' с элемента\r\n        // modal.classList.toggle('show') // Альтернативный способ переключения класса\r\n        document.body.style.overflow = 'hidden'; // Отключает прокрутку страницы\r\n        clearInterval(modalTimerId); // Останавливает выполнение таймера (если был задан)\r\n    }\r\n\r\n    modalTrigger.forEach(btn => {\r\n        btn.addEventListener('click', openModal);\r\n    });\r\n\r\n    function closeModal() {\r\n        modal.classList.add('hide');\r\n        modal.classList.remove('show');\r\n        // modal.classList.toggle('show')\r\n        document.body.style.overflow = '';\r\n    }\r\n\r\n    modal.addEventListener('click', (e) => {\r\n        if (e.target === modal || e.target.getAttribute('data-close') == '') {\r\n            closeModal();\r\n        }\r\n\r\n    });\r\n\r\n    document.addEventListener('keydown', (e) => {\r\n        if (e.code === 'Escape' && modal.classList.contains('show')) {\r\n            closeModal();\r\n        }\r\n    });\r\n\r\n    const modalTimerId = setTimeout(openModal, 50000);\r\n\r\n    function showModalByScroll() {\r\n        if (window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight) {\r\n            openModal();\r\n            window.removeEventListener('scroll', showModalByScroll);\r\n        }\r\n    }\r\n\r\n    window.addEventListener('scroll', showModalByScroll);\r\n}\r\n\r\nmodule.exports = modal;","function slider() {\r\n    const slides = document.querySelectorAll('.offer__slide'),\r\n          slider = document.querySelector('.offer__slider'),\r\n          prev = document.querySelector('.offer__slider-prev'),\r\n          next = document.querySelector('.offer__slider-next'),\r\n          total = document.querySelector('#total'),\r\n          current = document.querySelector('#current'),\r\n          slidesWrapper = document.querySelector('.offer__slider-wrapper'),\r\n          slidesField = document.querySelector('.offer__slider-inner'),\r\n          width = window.getComputedStyle(slidesWrapper).width;\r\n          \r\n    let slideIndex = 1;\r\n    let offset = 0;\r\n\r\n     if (slides.length < 10) {\r\n         total.textContent = `0${slides.length}`; //отображается с нулём например, 05\r\n         current.textContent = `0${slideIndex}`;\r\n     } else {\r\n         total.textContent = slides.length; //отображается число без нуля\r\n         current.textContent = slideIndex;\r\n     }\r\n\r\n    slidesField.style.width = 100 * slides.length + '%';\r\n    slidesField.style.display = 'flex';\r\n    slidesField.style.transition = '0.5s all';\r\n\r\n    slidesWrapper.style.overflow = 'hidden';\r\n\r\n\r\n    slides.forEach(slide => {\r\n        slide.style.width = width;\r\n    });\r\n\r\n    slider.style.position = 'relative';\r\n\r\n    const indicators = document.createElement('ol'),\r\n          dots = [];\r\n    indicators.classList.add('carousel-indicators');\r\n    indicators.style.cssText = `\r\n        position: absolute;\r\n        right: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        z-index: 15;\r\n        display: flex;\r\n        justify-content: center;\r\n        margin-right: 15%;\r\n        margin-left: 15%;\r\n        list-style: none;\r\n    `;\r\n    slider.append(indicators);\r\n\r\n    for (let i=0; i < slides.length; i++) {\r\n        const dot = document.createElement('li');\r\n        dot.setAttribute('data-slide-to', i + 1);\r\n        dot.style.cssText = `\r\n            box-sizing: content-box;\r\n            flex: 0 1 auto;\r\n            width: 30px;\r\n            height: 6px;\r\n            margin-right: 3px;\r\n            margin-left: 3px;\r\n            cursor: pointer;\r\n            background-color: #fff;\r\n            background-clip: padding-box;\r\n            border-top: 10px solid transparent;\r\n            border-bottom: 10px solid transparent;\r\n            opacity: .5;\r\n            transition: opacity .6s ease;\r\n        `;\r\n        if (i == 0) {\r\n            dot.style.opacity = 1;\r\n        }\r\n        indicators.append(dot);\r\n        dots.push(dot);\r\n    }\r\n\r\n    function deleteNotDigits(str) {\r\n        return +str.replace(/\\D/g, '');\r\n    }\r\n\r\n    next.addEventListener('click', () => {\r\n         // Если слайдер находится на последнем слайде (offset равен максимальному смещению)\r\n        if (offset == deleteNotDigits(width) * (slides.length -1)){\r\n            offset = 0; // Возвращаемся к первому слайду, сбрасывая смещение\r\n        } else {\r\n            // Иначе увеличиваем смещение на ширину одного слайда\r\n            offset += deleteNotDigits(width);\r\n        }\r\n\r\n        slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n        if (slideIndex == slides.length) {\r\n            slideIndex = 1;\r\n        } else {\r\n            slideIndex++;\r\n        }\r\n\r\n        if (slides.length < 10) {\r\n            current.textContent = `0${slideIndex}`;\r\n        } else {\r\n            current.textContent = slideIndex;\r\n        }\r\n\r\n        dots.forEach(dot => dot.style.opacity = '.5');\r\n        dots[slideIndex - 1].style.opacity = 1;\r\n    });\r\n\r\n    prev.addEventListener('click', () => {\r\n        // Если слайдер находится на первом слайде (offset равен 0)\r\n        if (offset == 0) {\r\n            // Перемещаемся на последний слайд\r\n            offset = deleteNotDigits(width) * (slides.length -1);\r\n        } else {\r\n            // Иначе уменьшаем смещение на ширину одного слайда\r\n            offset -= deleteNotDigits(width);\r\n        }\r\n        // Перемещаем контейнер слайдов на новое смещение\r\n        slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n        if (slideIndex == 1) {\r\n            slideIndex = slides.length;\r\n        } else {\r\n            slideIndex--;\r\n        }\r\n\r\n        if (slides.length < 10) {\r\n            current.textContent = `0${slideIndex}`;\r\n        } else {\r\n            current.textContent = slideIndex;\r\n        }\r\n\r\n    });\r\n\r\n    dots.forEach(dot => {\r\n        dot.addEventListener('click', (e) => {\r\n            const slideTo = e.target.getAttribute('data-slide-to');\r\n    \r\n            slideIndex = +slideTo;\r\n            offset = deleteNotDigits(width) * (slideTo - 1);\r\n    \r\n            slidesField.style.transform = `translateX(-${offset}px)`;\r\n    \r\n            if (slides.length < 10) {\r\n                current.textContent = `0${slideIndex}`;\r\n            } else {\r\n                current.textContent = slideIndex;\r\n            }\r\n    \r\n            dots.forEach(dot => dot.style.opacity = '.5');\r\n            dots[slideIndex - 1].style.opacity = 1;\r\n        });\r\n    });\r\n    \r\n    // showSlides(slideIndex); //вызывается для показа начального слайда.\r\n    // //Установка общего количества слайдов\r\n    // if (slides.length < 10) {\r\n    //     total.textContent = `0${slides.length}`; //отображается с нулём например, 05\r\n    // } else {\r\n    //     total.textContent = slides.length; //отображается число без нуля\r\n    // }\r\n\r\n    // function showSlides(n) {\r\n    //     if (n > slides.length) {\r\n    //         slideIndex = 1; // Если индекс превышает количество слайдов, возвращаемся к первому слайду\r\n    //     }\r\n    //     if (n < 1) {\r\n    //         slideIndex = slides.length;// Если индекс меньше 1, переходим к последнему слайду\r\n    //     }\r\n\r\n    //     slides.forEach(item => item.style.display = 'none'); // Скрыть все слайды\r\n\r\n    //     slides[slideIndex - 1].style.display = 'block'; // Показать текущий слайд\r\n\r\n    //     if (slides.length < 10) {\r\n    //         current.textContent = `0${slideIndex}`; // Текущий индекс слайда с нулём\r\n    //     } else {\r\n    //         current.textContent = slideIndex; // Текущий индекс слайда\r\n    //     }\r\n    // }\r\n    // //Функция переключения слайдов\r\n    // function plusSlides(n) {\r\n    //     showSlides(slideIndex += n);\r\n    // }\r\n    // //Добавление обработчиков событий на кнопки\r\n    // prev.addEventListener('click', () => {\r\n    //     plusSlides(-1);\r\n    // });\r\n\r\n    // next.addEventListener('click', () => {\r\n    //     plusSlides(1);\r\n    // });\r\n}\r\n\r\nmodule.exports = slider; ","function tabs() {\r\n    const tabs = document.querySelectorAll('.tabheader__item'),\r\n        tabsContent = document.querySelectorAll('.tabcontent'),\r\n        tabsParent = document.querySelector('.tabheader__items'); // Выбираем родительский элемент вкладок\r\n\r\n    // Скрыть все табы и убрать активный класс\r\n    function hideTabContent() {\r\n        tabsContent.forEach(item => {\r\n            item.classList.add('hide');\r\n            item.classList.remove('show', 'fade');\r\n            //item.style.display = 'none'; // Прячем все табы\r\n        });\r\n\r\n        tabs.forEach(item => {\r\n            item.classList.remove('tabheader__item_active'); // Убираем активный класс\r\n        });\r\n    }\r\n\r\n    function showTabContent(i = 0) {\r\n        tabsContent[i].classList.add('show', 'fade');\r\n        tabsContent[i].classList.remove('hide');\r\n        //tabsContent[i].style.display = 'block'; // Показываем нужный таб\r\n        tabs[i].classList.add('tabheader__item_active'); // Добавляем активный класс\r\n    }\r\n\r\n    hideTabContent(); // Прячем табы по умолчанию\r\n    showTabContent(); // Показываем первый таб по умолчанию\r\n\r\n    tabsParent.addEventListener('click', (event) => {\r\n        const target = event.target;\r\n\r\n        if (target && target.classList.contains('tabheader__item')) {\r\n            tabs.forEach((item, i) => {\r\n                if (target == item) {\r\n                    hideTabContent(); // Прячем табы по умолчанию\r\n                    showTabContent(i); // Показываем первый таб по умолчанию\r\n                }\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\nmodule.exports = tabs;","function timer() {\r\n    \r\n    // Установка даты окончания таймера\r\n    const deadline = '2025-12-31';\r\n\r\n    // Функция вычисления оставшегося времени до указанного времени\r\n    function getTimeRemaining(endtime) {\r\n        // Вычисляем разницу в миллисекундах между текущим временем и дедлайном\r\n        const t = Date.parse(endtime) - Date.parse(new Date()),\r\n            // Рассчитываем дни, часы, минуты, секунды\r\n            days = Math.floor(t / (1000 * 60 * 60 * 24)),\r\n            hours = Math.floor((t / (1000 * 60 * 60)) % 24),\r\n            minutes = Math.floor((t / (1000 * 60)) % 60),\r\n            seconds = Math.floor((t / 1000) % 60);\r\n\r\n        // Возвращаем объект с оставшимся временем\r\n        return {\r\n            'total': t,\r\n            'days': days, // исправлено с 'daus' на 'days'\r\n            'hours': hours,\r\n            'minutes': minutes,\r\n            'seconds': seconds\r\n        };\r\n    }\r\n\r\n    function getZero(num) {\r\n        if (num >= 0 && num < 10) {\r\n            return `0${num}`;\r\n        } else {\r\n            return num;\r\n        }\r\n    }\r\n\r\n    // Функция установки и обновления таймера\r\n    function setClock(selector, endtime) {\r\n        // Находим контейнер таймера\r\n        const timer = document.querySelector(selector),\r\n            // Находим элементы таймера внутри контейнера\r\n            days = timer.querySelector('#days'), // Исправляем селектор\r\n            hours = timer.querySelector('#hours'),\r\n            minutes = timer.querySelector('#minutes'), // Исправлено с 'mintes'\r\n            seconds = timer.querySelector('#seconds'),\r\n            timeInterval = setInterval(updateClock, 1000); // Устанавливаем интервал обновления\r\n\r\n        // Функция обновления значений на странице\r\n        function updateClock() {\r\n            const t = getTimeRemaining(endtime); // Получаем оставшееся время\r\n\r\n            // Обновляем содержимое HTML элементов\r\n            days.innerHTML = getZero(t.days);\r\n            hours.innerHTML = getZero(t.hours);\r\n            minutes.innerHTML = getZero(t.minutes);\r\n            seconds.innerHTML = getZero(t.seconds);\r\n\r\n            // Останавливаем таймер, если дедлайн достигнут\r\n            if (t.total <= 0) {\r\n                clearInterval(timeInterval);\r\n            }\r\n        }\r\n\r\n        // Запускаем обновление таймера сразу, чтобы не было задержки 1 секунду\r\n        updateClock();\r\n    }\r\n\r\n    // Запускаем таймер\r\n    setClock('.timer', deadline);\r\n}\r\n\r\nmodule.exports = timer;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","window.addEventListener('DOMContentLoaded', () => {\r\n    const tabs = require('./modules/tabs'),\r\n          modal= require('./modules/modal'),\r\n          timer= require('./modules/timer'),\r\n          cards = require('./modules/cards'),\r\n          calc = require('./modules/calc'),\r\n          forms = require('./modules/forms'),\r\n          slider = require('./modules/slider');\r\n\r\n    tabs();\r\n    modal();\r\n    timer();\r\n    cards();\r\n    calc();\r\n    forms();\r\n    slider();\r\n    //Tabs//Timer// Modal// Используем классы для карточек//Forms//Slider//calc\r\n\r\n});\r\n\r\n// добавить проект в ГИТ\r\n// git status\r\n// git add -A\r\n// git commit -a -m\"1 урок\"\r\n// git push\r\n\r\n// запуск сервера json\r\n// json-server db.json\r\n\r\n// запуск переработчика\r\n// npx webpack"],"names":[],"sourceRoot":""}